
JL  0 + l3
JL  0 + l4
JL  0 + l3
JL  0 + l4
gen_code() frame=48
ASM: _main:
ASM: ; _main routine
ASM: [:sp]   = $ff
ASM: [:sp+1] = $ff
ASM: MARLO   = [:sp]
ASM: MARHI   = [:sp+1]

===================================================================  allocreg (65)
ASM: ; ALLOCREG - gpr3
ASM: 	; allocated: gtmp1 gtmp2 ftmp1 ftmp2 gpr3 sp_stash 

===================================================================  allocreg (65)
ASM: ; ALLOCREG - gpr2
ASM: 	; allocated: gtmp1 gtmp2 ftmp1 ftmp2 gpr2 gpr3 sp_stash 

===================================================================  allocreg (65)
ASM: ; ALLOCREG - gpr1
ASM: 	; allocated: gtmp1 gtmp2 ftmp1 ftmp2 gpr1 gpr2 gpr3 sp_stash 

===================================================================  allocreg (65)
ASM: ; ALLOCREG - gpr0
ASM: 	; allocated: gtmp1 gtmp2 ftmp1 ftmp2 gpr0 gpr1 gpr2 gpr3 sp_stash 

===================================================================  move (2)
; location test7.c:6
PRIC2: JL  0 + l3
	move array >>M0<<+L3(p:0x56188526ddf0)->>>M0<<+0(FP)(id:value) size=8
	DUMP code = move    typf=(null)  typf2=??   ztyp=(null)  q1typ=(null)  q2typ=(null)
	DUMP z  < VAR( storage:auto:0(sp) ) > 'value' 
	DUMP q1 < VAR( storage:static:_L3 ) > '' 
	DUMP q2 < FLAG:0  >
-----
ASM: ; ASSIGN type:(null) size:8
ASM: 	; assign into a var
ASM: ; assign step 1 - load to temp reg
ASM: 	; load_reg targ from VAR - reg size:4    src data size:0
[[[[[[ 0 ]]]]]
ASM: ERROR IF ASSIGN & (TYPE>POINTER|(TYPE=CHAR & VAL 0!=1))
FIXME - AUTO and REGISTER storage classes only
ASM: 	; stash SP
ASM: 	[:sp_stash]   = MARLO
ASM: 	[:sp_stash+1] = MARHI
ASM: 	; adjust SP by offset 3 to point at var
ASM: 	MARLO = MARLO + (> 3) _S            ; add lo byte of offset
ASM: 	MARHI = MARHI A_PLUS_B_PLUS_C (< 3) ; add hi byte of offset plus any carry
CANT COPY 0 BYTES
ASM: 	; copy 0 bytes
ASM: 	; restore SP
ASM: 	MARLO = [:sp_stash]
ASM: 	MARHI = [:sp_stash+1]
ASM: ; assign step 2 - store to var
ASM: 	; stash SP
ASM: 	[:sp_stash]   = MARLO
ASM: 	[:sp_stash+1] = MARHI
CANT COPY 0 BYTES

>EOF
error 158 in line 28 of "test7.c": internal error 1 in line 1884 of file machines/g/machine.c !!
aborting...
unexpected end of file
1 error found!




ASM: ; registers
ASM: 	gtmp1     :	RESERVE 4
ASM: 	gtmp2     :	RESERVE 4
ASM: 	ftmp1     :	RESERVE 8
ASM: 	ftmp2     :	RESERVE 8
ASM: 	gpr0      :	RESERVE 4
ASM: 	gpr1      :	RESERVE 4
ASM: 	gpr2      :	RESERVE 4
ASM: 	gpr3      :	RESERVE 4
ASM: 	gpr4      :	RESERVE 4
ASM: 	gpr5      :	RESERVE 4
ASM: 	gpr6      :	RESERVE 4
ASM: 	gpr7      :	RESERVE 4
ASM: 	gpr8      :	RESERVE 4
ASM: 	gpr9      :	RESERVE 4
ASM: 	gpr10     :	RESERVE 4
ASM: 	gpr11     :	RESERVE 4
ASM: 	gpr12     :	RESERVE 4
ASM: 	gpr13     :	RESERVE 4
ASM: 	gpr14     :	RESERVE 4
ASM: 	gpr15     :	RESERVE 4
ASM: 	fpr0      :	RESERVE 8
ASM: 	fpr1      :	RESERVE 8
ASM: 	fpr2      :	RESERVE 8
ASM: 	fpr3      :	RESERVE 8
ASM: 	fpr4      :	RESERVE 8
ASM: 	fpr5      :	RESERVE 8
ASM: 	fpr6      :	RESERVE 8
ASM: 	fpr7      :	RESERVE 8
ASM: 	fpr8      :	RESERVE 8
ASM: 	fpr9      :	RESERVE 8
ASM: 	fpr10     :	RESERVE 8
ASM: 	fpr11     :	RESERVE 8
ASM: 	fpr12     :	RESERVE 8
ASM: 	fpr13     :	RESERVE 8
ASM: 	fpr14     :	RESERVE 8
ASM: 	fpr15     :	RESERVE 8
ASM: 	sp_stash  :	RESERVE 2
ASM: 	sp        :	RESERVE 2
ASM: END
ERROR
$VBCC/bin/vbccg $FLAGS -ic1 -ic2 -I$VBCC/targets/6502-bbc/include -quiet "test7.c" -o= "test7.asm" -no-inline-peephole -unsigned-char  -O=1 failed
